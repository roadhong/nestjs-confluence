/**
 * The Confluence Cloud REST API v2
 * This document describes Confluence\'s v2 APIs. This is intended to be an iteration on the existing Confluence Cloud REST API with improvements in both endpoint definitions and performance.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AttachmentLinks } from './attachmentLinks';
import { Version } from './version';
import { ContentStatus } from './contentStatus';


export interface AttachmentBulk { 
    /**
     * ID of the attachment.
     */
    id?: string;
    status?: ContentStatus;
    /**
     * Title of the comment.
     */
    title?: string;
    /**
     * Date and time when the attachment was created. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\".
     */
    createdAt?: string;
    /**
     * ID of the containing page.  Note: This is only returned if the attachment has a container that is a page.
     */
    pageId?: string;
    /**
     * ID of the containing blog post.  Note: This is only returned if the attachment has a container that is a blog post.
     */
    blogPostId?: string;
    /**
     * ID of the containing custom content.  Note: This is only returned if the attachment has a container that is custom content.
     */
    customContentId?: string;
    /**
     * Media Type for the attachment.
     */
    mediaType?: string;
    /**
     * Media Type description for the attachment.
     */
    mediaTypeDescription?: string;
    /**
     * Comment for the attachment.
     */
    comment?: string;
    /**
     * File ID of the attachment. This is the ID referenced in `atlas_doc_format` bodies and is distinct from the attachment ID.
     */
    fileId?: string;
    /**
     * File size of the attachment.
     */
    fileSize?: number;
    /**
     * WebUI link of the attachment.
     */
    webuiLink?: string;
    /**
     * Download link of the attachment.
     */
    downloadLink?: string;
    version?: Version;
    _links?: AttachmentLinks;
}
export namespace AttachmentBulk {
}


